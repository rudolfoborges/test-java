package ps.swt.command.iso.strategy;

import javafx.util.Pair;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.CountDownLatch;

/**
 * @author rudolfoborges
 * @since 7/27/17 2:21 PM
 */
public class MerchantActive {

    private static final String REGEX = "[+aeiou]";

    public static void main(String[] args) {
        final Stream stream = new CharacterStream("atartafeyajhghdsagiift");

        int countMath = 0;

        final List<Pair<String, String>> matches = new ArrayList<>();

        final CountDownLatch countDownLatch = new CountDownLatch(2);

        char last = Character.MAX_VALUE;

        while (stream.hashNext()) {
            final Character next = stream.getNext();

            if (countDownLatch.getCount() == 0l
                    && isConsoante(last)
                    && isVogal(next)) {
                final Pair<String, String> pair = new Pair(last, next);
                matches.add(pair);
            }

            last = next;
            countDownLatch.countDown();
        }

        System.out.println(matches);
    }

    private static boolean isVogal(char character) {
        return String.valueOf(character).matches(REGEX);
    }

    private static boolean isConsoante(char character) {
        return !isVogal(character);
    }

}



package ps.swt.command.iso.strategy;

/**
 * @author rudolfoborges
 * @since 7/27/17 2:10 PM
 */
public interface Stream {

    boolean hashNext();

    char getNext();

}



package ps.swt.command.iso.strategy;

/**
 * @author rudolfoborges
 * @since 7/27/17 2:11 PM
 */
public class CharacterStream implements Stream {

    private final char[] characters;
    private int index;

    public CharacterStream(String text) {
        if (text == null) {
            throw new RuntimeException();
        }

        characters = text.toLowerCase().toCharArray();
        index = 0;
    }

    @Override
    public boolean hashNext() {
        return index < characters.length;
    }

    @Override
    public char getNext() {
        final char character = characters[index];
        index++;
        return character;
    }

}

task myRun(type: JavaExec) {
  classpath sourceSets.main.runtimeClasspath
  main = "com.bla.MainRunner"
  args "arg1", "arg2"
}


